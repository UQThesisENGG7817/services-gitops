## name of the runner scale set to create.  Defaults to the helm release name
runnerScaleSetName: "self-hosted-medium"

## maxRunners is the max number of runners the autoscaling runner set will scale up to.
# maxRunners: 5

## minRunners is the min number of runners the autoscaling runner set will scale down to.
minRunners: 1

## template is the PodSpec for each runner Pod
template:
  spec:
    securityContext:
        fsGroup: 1001
    # initContainers:
    #   - name: docker-setup
    #     image: busybox:1.35
    #     command: ["sh", "-c", "chmod 666 /var/run/docker.sock"]
    #     volumeMounts:
    #       - name: docker-socket
    #         mountPath: /var/run/docker.sock
    initContainers:
    - name: init-dind-externals
      image: ghcr.io/actions/actions-runner:latest
      securityContext:
        runAsUser: 0
      command: ["/bin/sh", "-c"]
      args:
        - |
          cp -r -v /home/runner/externals/. /home/runner/tmpDir/
      volumeMounts:
      - name: dind-externals
        mountPath: /home/runner/tmpDir
    - name: init-dind-rootless
      image: docker:dind-rootless
      command:
        - sh
        - -c
        - |
          set -x
          cp -a /etc/. /dind-etc/
          echo 'runner:x:1001:1001:runner:/home/runner:/bin/ash' >> /dind-etc/passwd
          echo 'runner:x:1001:' >> /dind-etc/group
          echo 'runner:100000:65536' >> /dind-etc/subgid
          echo 'runner:100000:65536' >>  /dind-etc/subuid
          chmod 755 /dind-etc;
          chmod u=rwx,g=rx+s,o=rx /dind-home
          chown 1001:1001 /dind-home
          chown -R 1001:123 /home/runner/_work
      securityContext:
        runAsUser: 0
      volumeMounts:
        - name: work
          mountPath: /home/runner/_work
        - mountPath: /dind-etc
          name: dind-etc
        - mountPath: /dind-home
          name: dind-home
    containers:
    - name: runner
      image: ghcr.io/uqthesisengg7817/golden-images/actions-runner:2.317.0-28b49d1
      imagePullPolicy: IfNotPresent
      env:
      - name: DOCKER_HOST
        value: unix:///var/run/docker.sock
      - name: ACTIONS_RUNNER_REQUIRE_JOB_CONTAINER
        value: "false"
      command: ["/bin/sh", "-c"]
      args:
        - |      
          /home/runner/run.sh
      lifecycle:
        preStop:
          exec:
            command:
              - sh
              - -c
              - "sleep 30s"
      resources:
        limits:
          memory: 6Gi
        requests:
          cpu: 2
          memory: 4Gi
      volumeMounts:
      # - name: persistent-runner-data
      #   mountPath: /var/lib/docker
      - name: work
        mountPath: /home/runner/_work
      - name: dind-sock
        mountPath: /var/run
        readOnly: true
      # - name: docker-socket
      #   mountPath: /var/run/docker.sock
    - name: dind
      image: docker:dind-rootless
      args:
        - dockerd
        - --host=unix:///var/run/docker.sock
        - --data-root=/home/runner/_work
        - --group=$(DOCKER_GROUP_GID)
      env:
        - name: DOCKER_GROUP_GID
          value: "123"
      securityContext:
        privileged: true
        runAsUser: 1001
        runAsGroup: 1001
      volumeMounts:
        - name: work
          mountPath: /home/runner/_work
        - name: dind-sock
          mountPath: /var/run
        - name: dind-externals
          mountPath: /home/runner/externals
        - name: dind-etc
          mountPath: /etc
        - name: dind-home
          mountPath: /home/runner
    imagePullSecrets:
    - name: gha-image-pull-secrets 
    volumes:
    - name: dind-sock
      emptyDir: {}
    - name: dind-externals
      emptyDir: {}
    - name: dind-etc
      emptyDir: {}
    - name: dind-home
      emptyDir: {}
    - name: work
      # persistentVolumeClaim:
      #   claimName: gha-runner-medium-pvc
      ephemeral:
        volumeClaimTemplate:
          spec:
            accessModes: [ "ReadWriteOnce" ]
            storageClassName: "default"
            resources:
              requests:
                storage: 50Gi
    # - name: docker-socket
    #   hostPath:
    #     path: /var/run/docker.sock
    nodeSelector:
      magnum.openstack.org/role: worker